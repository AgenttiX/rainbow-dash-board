# TODO: Split to multiple smaller files

openapi: "3.0.1"
info:
  version: 1.0.0
  title: Rainbow Dash Board
  description: A simple data storage and graphing service for IoT devices.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /datasets:
    get:
      tags:
        - dataset
      summary: Returns all datasets
      description: Returns all datasets.
      responses:
        200:
          description: Found datasets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
        default:
          $ref: '#/components/responses/error'
    post:
      tags:
        - dataset
      summary: Creates a new dataset
      description: |
        Creates a new dataset.

        Fields `id`, `createdAt` and `updatedAt` will be ignored
        if included in the supplied dataset.
      requestBody:
        description: Dataset to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDataset'
      responses:
        200:
          description: Created dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        default:
          $ref: '#/components/responses/error'
    put:
      tags:
        - dataset
      summary: Replaces a dataset
      description: |
        Replaces a dataset. The ID of the dataset will be taken from
        the `id` field of the supplied dataset.

        Fields `createdAt` and `updatedAt` will be ignored
        if included in the supplied dataset.
      requestBody:
        description: Dataset with which to replace the old one
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        200:
          description: New dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        default:
          $ref: '#/components/responses/error'
  /datasets/{id}:
    get:
      tags:
        - dataset
      summary: Returns a single dataset
      description: Returns a dataset based on a single ID.
      parameters:
        - $ref: '#/components/parameters/pathDatasetId'
      responses:
        200:
          description: Found dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        default:
          $ref: '#/components/responses/error'
    delete:
      tags:
        - dataset
      summary: Removes a dataset
      description: Removes a dataset based on a single ID.
      parameters:
        - $ref: '#/components/parameters/pathDatasetId'
      responses:
        200:
          description: OK
        default:
          $ref: '#/components/responses/error'

components:
  parameters:
    pathDatasetId:
      name: id
      in: path
      description: ID of dataset
      required: true
      schema:
        type: integer
        format: int64
  responses:
    error:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Dataset:
      allOf:
        - $ref: '#/components/schemas/NewDataset'
        - required:
          - id
          - createdAt
          - updatedAt
          properties:
            id:
              type: integer
              format: int64
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    NewDataset:
      required:
        - name
        - tableName
        - columns
      properties:
        name:
          type: string
        tableName:
          type: string
        columns:
          type: array
          items:
            type: string
    Error:
      required:
        - error
      properties:
        error:
          type: object
